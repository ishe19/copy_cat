 code for final page and vpc gridview


   return Material(
    color: Colors.blue,
    elevation: 14.0,
    shadowColor: Colors.black,
    borderRadius: BorderRadius.circular(24.0),
    child: Center( 
      child: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                Center(
                  child: Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Text(heading,
                       style: TextStyle(
                          color: new Color(color),
                          fontSize: 20.0,
                  ),
                 ),
                ),
                ),

               Material(
                color: new Color(color),
                borderRadius: BorderRadius.circular(24.0),
                  child: Padding(
                   padding: const EdgeInsets.all(16.0),
                    child: Icon (icon,
                    color: Colors.black,
                    size: 30.0,
                    ),
                    ),  
                   ),          
              ],
            )          
          ],
         ),
        ),
       ),
  );
}
 
 
 
 
 
 OrientationBuilder(builder: (context, orientaion){

                return GridView.count(     
                padding: const EdgeInsets.all(20.0),
                crossAxisSpacing: 10.0,
                crossAxisCount: 2,
                children: <Widget>[
                Card(
                    elevation: 5.0,
                    color: Colors.blue,
                    child: Container(               
                     child:
                       InkWell(splashColor: Colors.greenAccent,
                       onTap: (){
                         Navigator.push(context, MaterialPageRoute(builder: (context) => NotesList()));
                         
                       },             
                       child:Column(
                         children: <Widget>[
                           Text('Products and Services',
                           style: TextStyle(
                             fontSize: 30,
                             color: Colors.white
                           ),),
                           Icon(Icons.graphic_eq,
                           size: 40.0,)
                 ]),),),),
                 Card(
                    elevation: 5.0,
                    color: Colors.blue,
                    child: Container(
                      
                  child:
                       InkWell(splashColor: Colors.greenAccent,
                       onTap: (){
                         Navigator.push(context, MaterialPageRoute(builder: (context) => GainsList()));
                       },
                       
                       child:Column(
                         children: <Widget>[
                           Text('Gain Creators',
                           style: TextStyle(
                             fontSize: 25,
                             color: Colors.white
                           ),),
                           Icon(Icons.attach_money,
                           size: 40.0,)
                 ]),),),),
                 Card(
                    elevation: 5.0,
                    color: Colors.blue,
                    child: Container(
                      
                  child:
                       InkWell(splashColor: Colors.greenAccent,
                       onTap: (){
                         Navigator.push(context, MaterialPageRoute(builder: (context) => PainsList()));
                       },
                       
                       child:Column(
                         children: <Widget>[
                           Text('Pain Relievers',
                           style: TextStyle(
                             fontSize: 20,
                             color: Colors.white,
                           ),),
                           Icon(Icons.spa,
                           size: 40.0,)
                 ]),),),),
                 Card(
                    elevation: 5.0,
                    color: Colors.blue,
                    child: Container(
                      
                  child:
                       InkWell(splashColor: Colors.greenAccent,
                       onTap: (){
                        // Navigator.push(context, MaterialPageRoute(builder: (context) => NoteList(swotID.toString())));
                       },
                       
                       child:Column(
                         children: <Widget>[
                           Text('Customers',
                           style: TextStyle(
                             fontSize: 20,
                             color: Colors.white
                           ),),
                           Icon(Icons.supervised_user_circle,
                           size: 40.0,)
                 ]),),),),
                 
        

                ]);
}));}

}











class FinalVPCanvas extends StatefulWidget{

  FinalVPCanvasState createState() => FinalVPCanvasState(); 

}
class FinalVPCanvasState extends State<FinalVPCanvas>{
      static GlobalKey previewContainer = new GlobalKey();

 @override
  Widget build(BuildContext context){
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(icon: Icon(Icons.arrow_back),
        onPressed: (){
               Navigator.pop(context);
        },
        ),
        title: Text('Preview'),
        actions: <Widget>[
        IconButton(icon: Icon(Icons.save),
        onPressed: TakeScreenShot,
        ),
        ]
      ),
      body: RepaintBoundary(
        key: previewContainer,
        child: SingleChildScrollView(
        padding: EdgeInsets.all( 10),
        child: Container(
          color: Colors.white,
          child:Column(
        mainAxisAlignment: MainAxisAlignment.start,
        children: <Widget>[
          Card(
              child: Column(
                children: <Widget>[
                  Row(children: <Widget>[
                    Text("Value Proposition Canvas",  style: TextStyle(fontWeight: FontWeight.bold, decoration: TextDecoration.underline))
                  ],),
          Table(
          border: TableBorder.all(),
          children: <TableRow>[
            TableRow(children: <Widget> [
             Container(
                margin: EdgeInsets.all(2),
                color: Colors.white,
                width: 50.0,
                height: 60.0,
                child: Column(
                  children:<Widget>[ 
                    Icon(Icons.thumb_up,
                    size: 20.0,
                    color: Colors.green,),
                  Text('Products & Services',
                  textAlign: TextAlign.center,
                  style: TextStyle(color: Colors.black,
                  fontSize: 20.0),
                   ),
                  
                  ],
              ),
              ),
              Container(
                margin: EdgeInsets.all(2),
                color: Colors.white,
                width: 50.0,
                height: 60.0,
                child: Column(children: <Widget>[
                  Icon(Icons.thumb_down,
                  size: 20.0,
                  color: Colors.red,),
                   Text(
                  'Gain creators',
                  textAlign: TextAlign.left,
                  style: TextStyle( color: Colors.black,
                  fontSize:20.0),
                  ),
                ],
                ),
              ),
               
            ],
            ),

            TableRow(
              children: [
                 Container(
                   height: 150,
                   color: Colors.white,
                   child: FutureBuilder(
                                  future: ProductProvider.getProductsList(),
                                    builder: (context, snapshot) {
                                      if (snapshot.connectionState == ConnectionState.done) {
                                        final notes = snapshot.data;
                                        return ListView.builder(
                                          itemBuilder: (context, index) {
                                            return GestureDetector(
                                              onTap: () {
                                                // Navigator.push(context, MaterialPageRoute(builder: (context) => CanvasNote(NoteMode.Editing, notes[index], widget.postName, widget.modelId)));
                                              },
                                              child: Card(
                                                elevation: 5.0,
                                                color: Colors.green,
                                                child: Column(
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    children: <Widget>[
                                                      SwotTitle(notes[index]['title']),
                                                      Container(height: 4,),
                                                      // _NoteDescription(notes[index]['description'])
                                                    ],
                                                  ),
                                                ),
                 
                );
              },
              itemCount: notes == null? 0 : notes.length,
            );
          }
          return Center(child: CircularProgressIndicator());
        },
      ),),

      Container(
          height: 150,
          color: Colors.white,
          child: FutureBuilder(
                    future: GainsProvider.getGainsList(),
                      builder: (context, snapshot) {
                        if (snapshot.connectionState == ConnectionState.done) {
                          final notes = snapshot.data;
                          return ListView.builder(
                            itemBuilder: (context, index) {
                              return GestureDetector(
                                onTap: () {
                                  // Navigator.push(context, MaterialPageRoute(builder: (context) => CanvasNote(NoteMode.Editing, notes[index], widget.postName, widget.modelId)));
                                },
                                child: Card(
                                  elevation: 5.0,
                                  color: Colors.yellow,
                                  child: Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: <Widget>[
                                        SwotTitle(notes[index]['title']),
                                        Container(height: 4,),
                                        // _NoteDescription(notes[index]['description'])
                                      ],
                                    ),
                                  ),
                 
                );
              },
              itemCount: notes == null? 0 : notes.length,
            );
          }
          return Center(child: CircularProgressIndicator());
        },
      ),),
              ]
            ),


            TableRow(children: <Widget> [
              Container(
                margin: EdgeInsets.all(2),
                color: Colors.white,
                width: 45.0,
                height: 60.0,
                child: Column(
                  children:<Widget>[
                    Icon(Icons.school,
                    size: 20.0,
                    color: Colors.blue,),
                     Text('Pain relievers',
                  textAlign: TextAlign.center,
                  style: TextStyle(color: Colors.black,
                  fontSize: 20.0,
                   ),
                   ),
                  ]
              ),
              ),
              Container(
                margin: EdgeInsets.all(2),
                color: Colors.white,
                width: 50.0,
                height: 50.0,
                child: Column(
                  children: <Widget>[ 
                    Icon(Icons.warning,
                    size: 20.0,
                    color: Colors.orange,),
                Text('Threats',
                  textAlign: TextAlign.center,
                  style: TextStyle( color: Colors.black,
                  fontSize:20.0),
                  ),
                ],
                ),
              ),           
            ],
            ),
            TableRow(
              children: [
                 Container(
                   height: 150,
                   color: Colors.white,
                   child: FutureBuilder(
                                  future: PainsProvider.getPainsList(),
                                    builder: (context, snapshot) {
                                      if (snapshot.connectionState == ConnectionState.done) {
                                        final notes = snapshot.data;
                                        return ListView.builder(
                                          itemBuilder: (context, index) {
                                            return GestureDetector(
                                              onTap: () {
                                                // Navigator.push(context, MaterialPageRoute(builder: (context) => CanvasNote(NoteMode.Editing, notes[index], widget.postName, widget.modelId)));
                                              },
                                              child: Card(
                                                elevation: 5.0,
                                                color: Colors.lightBlue,
                                                child: Column(
                                                    crossAxisAlignment: CrossAxisAlignment.start,
                                                    children: <Widget>[
                                                      SwotTitle(notes[index]['title']),
                                                      Container(height: 4,),
                                                      // _NoteDescription(notes[index]['description'])
                                                    ],
                                                  ),
                                                ),
                 
                );
              },
              itemCount: notes == null? 0 : notes.length,
            );
          }
          return Center(child: CircularProgressIndicator());
        },
      ),),

      Container(
          height: 150,
          color: Colors.white,
          child: FutureBuilder(
                    future: PainsProvider.getPainsList(),
                      builder: (context, snapshot) {
                        if (snapshot.connectionState == ConnectionState.done) {
                          final notes = snapshot.data;
                          return ListView.builder(
                            itemBuilder: (context, index) {
                              return GestureDetector(
                                onTap: () {
                                  // Navigator.push(context, MaterialPageRoute(builder: (context) => CanvasNote(NoteMode.Editing, notes[index], widget.postName, widget.modelId)));
                                },
                                child: Card(
                                  elevation: 5.0,
                                  color: Colors.purple,
                                  child: Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: <Widget>[
                                        SwotTitle(notes[index]['title']),
                                        Container(height: 4,),
                                        // _NoteDescription(notes[index]['description'])
                                      ],
                                    ),
                                  ),
                 
                );
              },
              itemCount: notes == null? 0 : notes.length,
            );
          }
          return Center(child: CircularProgressIndicator());
        },
      ),),
              ]
            ),
           ],
          ),
                ],
                ),
      ),
        ],)
   ),
   ),
   ),
   );
  }
   Future<Uint8List> TakeScreenShot() async{
      try {
    print('inside');
      RenderRepaintBoundary boundary =
          previewContainer.currentContext.findRenderObject();
      ui.Image image = await boundary.toImage(pixelRatio: 3.0);
      ByteData byteData = await image.toByteData(format: ui.ImageByteFormat.png);
      var pngBytes = byteData.buffer.asUint8List();
      var bs64 = base64Encode(pngBytes);

      var filePath = await ImagePickerSaver.saveFile(
        fileData: byteData.buffer.asUint8List(),
      );
      print(filePath);
      // print(pngBytes);
      // print(bs64);
      setState(() {});
      return pngBytes;
    } catch (e) {
      print(e);
    }
  }
   }

class SwotTitle extends StatelessWidget {
  final String _title;

  SwotTitle(this._title);
  
  @override
  Widget build(BuildContext context) {
    return Text(
      _title,
      // style: TextStyle(
      //   fontWeight: FontWeight.bold
      // ),
    );
  }
}

